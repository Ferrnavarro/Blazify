@layout EmptyLayout
@page "/"
@inject NavigationManager NavManager
@inject HttpClient HttpClient
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<LoginView></LoginView>


@code {   
    private bool _isAuthed = false;

    protected override async Task OnInitializedAsync()
    {
        Dictionary<string, string> fragmentParams = GetFragmentParams();

        bool fromSpotifyPage = fragmentParams.ContainsKey("access_token");

        if (fromSpotifyPage)
        {
            await LocalStorage.SetItemAsync("spotify_access_token", fragmentParams["access_token"]);
        }

        NavManager.NavigateTo("/top-tracks");
    }

    private Dictionary<string, string> GetFragmentParams()
    {
        var uri = new Uri(NavManager.Uri);
        var maxLen = Math.Min(1, uri.Fragment.Length);

        return uri.Fragment.Substring(maxLen)?
       .Split("&", StringSplitOptions.RemoveEmptyEntries)?
       .Select(param => param.Split("=", StringSplitOptions.RemoveEmptyEntries))?
       .ToDictionary(param => param[0], param => param[1]) ?? new Dictionary<string, string>();
    }

}